// Copyright 2021-2023 Markus Leupold-LÃ¶wenthal
//
// This file is part of FreeBeeGee.
//
// FreeBeeGee is free software: you can redistribute it and/or modify it under
// the terms of the GNU Affero General Public License as published by the Free
// Software Foundation, either version 3 of the License, or (at your option) any
// later version.
//
// FreeBeeGee is distributed in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
// A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
// details.
//
// You should have received a copy of the GNU Affero General Public License
// along with FreeBeeGee. If not, see <https://www.gnu.org/licenses/>.

////
/// shadow.scss
///
/// Helpers that calculate highlights and shadows.
///
/// @group abstracts
/// @access public
////

// sass-lint:disable no-color-literals

$shadow-direction-origin: 120deg;
$shadow-direction: $shadow-direction-origin - 90deg; // CSS origin is north
$shadow-highlight-width: 1.5px;

:root {
  #{'--fbg-r-sin'}: math.sin($shadow-direction);
  #{'--fbg-r-cos'}: math.cos($shadow-direction);
  #{'--fbg-shadow-length'}: 2px;
}

@for $r from 0 through 359 { // @each $r in $rotate-steps
  .is-r-#{$r} {
    #{'--fbg-r-sin'}: math.sin($shadow-direction + ($r * 1deg));
    #{'--fbg-r-cos'}: math.cos($shadow-direction + ($r * 1deg));
  }

  .is-delay-r-#{$r} {
    #{'--fbg-r-sin'}: math.sin($shadow-direction - (360 - $r) * 1deg);
    #{'--fbg-r-cos'}: math.cos($shadow-direction - (360 - $r) * 1deg);
  }
}

/// Return a drop-shadow value for the configured shadow.
///
/// @example scss
///   shadow(2px, #001122)
///
/// @param {length} $blur The amount of blur.
/// @param {length} $color The color of the shadow
/// @returns {value} The drop shadow value, e.g. '2px 3px 2px #001122'.
@function shadow($blur, $color) {
  @return
    zoom(calc(var(--fbg-r-sin) * var(--fbg-shadow-length)))
    zoom(calc(var(--fbg-r-cos) * var(--fbg-shadow-length)))
    zoom($blur)
    $color;
}

/// Return a box-shadow highlight and darklight value for the configured light source.
///
/// @example scss
///   highlight()
///
/// @returns {value} The drop shadow value, e.g. '2px 3px 2px #001122'.
@function highlight() {
  @return
    zoom(calc(var(--fbg-r-sin) * $shadow-highlight-width)) zoom(calc(var(--fbg-r-cos) * $shadow-highlight-width)) zoom(0.5px) 0 $color-white-15a inset,
    zoom(calc(var(--fbg-r-sin) * -1 * $shadow-highlight-width)) zoom(calc(var(--fbg-r-cos) * -1 * $shadow-highlight-width)) zoom(0.5px) 0 $color-black-20a inset;
}

$shadow: shadow(2px, $color-black-65a);

$shadow-intensity: 0.5;
$shadow-spread: 2;
$shadow-color: #000;

@function shadow-sharp($px) {
  @return
    zoom(calc(var(--fbg-r-sin) * $px))
    zoom(calc(var(--fbg-r-cos) * $px));
}

@function shadow-blurry($px) {
  @return shadow-sharp($px) zoom($px * 0.5);
}

.is-quality-medium {
  .is-d-x {
    filter: drop-shadow(shadow-sharp(2px) 0 $color-black-35a);
  }

  .is-d-0 {
    filter: none;
  }

  .is-d-1 {
    filter: drop-shadow(shadow-sharp(1px) 0 $color-black-35a);
  }

  .is-d-2,
  .is-d-3,
  .is-d-4,
  .is-d-5,
  .is-d-6,
  .is-d-7,
  .is-d-8,
  .is-d-9 {
    filter: drop-shadow(shadow-sharp(2px) 0 $color-black-35a);
  }
}

.is-quality-high,
.is-quality-ultra {
  .is-d-x {
    filter: drop-shadow(2px 2px 2px $color-black-65a);
  }

  .is-d-0 {
    filter: none;
  }

  .is-d-1 {
    $shadow-height-intensity: 1;

    filter: drop-shadow(shadow-blurry(2px) rgba($shadow-color, $shadow-height-intensity * $shadow-intensity * 1));
  }

  .is-d-2 {
    filter: drop-shadow($shadow); // default shadow = 1-layer only
  }

  .is-d-3 {
    $shadow-height-intensity: 0.9;

    filter:
      drop-shadow(shadow-blurry(2px) rgba($shadow-color, $shadow-height-intensity * $shadow-intensity * 0.5))
      drop-shadow(shadow-blurry(2px + math.pow($shadow-spread, 1)) rgba($shadow-color, $shadow-height-intensity * $shadow-intensity));
  }

  .is-d-4 {
    $shadow-height-intensity: 0.8;

    filter:
      drop-shadow(shadow-blurry(2px) rgba($shadow-color, $shadow-height-intensity * $shadow-intensity * 0.5))
      drop-shadow(shadow-blurry(2px + math.pow($shadow-spread, 1)) rgba($shadow-color, $shadow-height-intensity * $shadow-intensity * 0.75))
      drop-shadow(shadow-blurry(2px + math.pow($shadow-spread, 2)) rgba($shadow-color, $shadow-height-intensity * $shadow-intensity * 0.5));
  }

  .is-d-5 {
    $shadow-height-intensity: 0.8;

    filter:
      drop-shadow(shadow-blurry(2px) rgba($shadow-color, $shadow-height-intensity * $shadow-intensity * 0.5))
      drop-shadow(shadow-blurry(2px + math.pow($shadow-spread, 1)) rgba($shadow-color, $shadow-height-intensity * $shadow-intensity * 0.75))
      drop-shadow(shadow-blurry(2px + math.pow($shadow-spread, 2)) rgba($shadow-color, $shadow-height-intensity * $shadow-intensity));
  }

  .is-d-6 {
    $shadow-height-intensity: 0.7;

    filter:
      drop-shadow(shadow-blurry(2px) rgba($shadow-color, $shadow-height-intensity * $shadow-intensity * 0.5))
      drop-shadow(shadow-blurry(2px + math.pow($shadow-spread, 1)) rgba($shadow-color, $shadow-height-intensity * $shadow-intensity * 0.75))
      drop-shadow(shadow-blurry(2px + math.pow($shadow-spread, 2)) rgba($shadow-color, $shadow-height-intensity * $shadow-intensity))
      drop-shadow(shadow-blurry(2px + math.pow($shadow-spread, 3)) rgba($shadow-color, $shadow-height-intensity * $shadow-intensity * 0.5));
  }

  .is-d-7 {
    $shadow-height-intensity: 0.7;

    filter:
      drop-shadow(shadow-blurry(2px) rgba($shadow-color, $shadow-height-intensity * $shadow-intensity * 0.5))
      drop-shadow(shadow-blurry(2px + math.pow($shadow-spread, 1)) rgba($shadow-color, $shadow-height-intensity * $shadow-intensity * 0.75))
      drop-shadow(shadow-blurry(2px + math.pow($shadow-spread, 2)) rgba($shadow-color, $shadow-height-intensity * $shadow-intensity * 0.5))
      drop-shadow(shadow-blurry(2px + math.pow($shadow-spread, 3)) rgba($shadow-color, $shadow-height-intensity * $shadow-intensity));
  }

  .is-d-8 {
    $shadow-height-intensity: 0.6;

    filter:
      drop-shadow(shadow-blurry(2px) rgba($shadow-color, $shadow-height-intensity * $shadow-intensity * 0.5))
      drop-shadow(shadow-blurry(2px + math.pow($shadow-spread, 1)) rgba($shadow-color, $shadow-height-intensity * $shadow-intensity * 0.75))
      drop-shadow(shadow-blurry(2px + math.pow($shadow-spread, 2)) rgba($shadow-color, $shadow-height-intensity * $shadow-intensity * 0.5))
      drop-shadow(shadow-blurry(2px + math.pow($shadow-spread, 3)) rgba($shadow-color, $shadow-height-intensity * $shadow-intensity))
      drop-shadow(shadow-blurry(2px + math.pow($shadow-spread, 4)) rgba($shadow-color, $shadow-height-intensity * $shadow-intensity * 0.5));
  }

  .is-d-9 {
    $shadow-height-intensity: 0.6;

    filter:
      drop-shadow(shadow-blurry(2px) rgba($shadow-color, $shadow-height-intensity * $shadow-intensity * 0.5))
      drop-shadow(shadow-blurry(2px + math.pow($shadow-spread, 1)) rgba($shadow-color, $shadow-height-intensity * $shadow-intensity * 0.75))
      drop-shadow(shadow-blurry(2px + math.pow($shadow-spread, 2)) rgba($shadow-color, $shadow-height-intensity * $shadow-intensity * 0.5))
      drop-shadow(shadow-blurry(2px + math.pow($shadow-spread, 3)) rgba($shadow-color, $shadow-height-intensity * $shadow-intensity * 0.5))
      drop-shadow(shadow-blurry(2px + math.pow($shadow-spread, 4)) rgba($shadow-color, $shadow-height-intensity * $shadow-intensity));
  }
}
